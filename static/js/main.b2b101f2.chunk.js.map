{"version":3,"sources":["media/alarm.mp3","components/Presets.jsx","components/Time.jsx","components/Controll.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Presets","props","buttonClass","started","className","map","label","key","id","onClick","e","onPresets","breakLength","sessionLength","formatTime","timeLeft","minute","Math","floor","second","Time","useEffect","document","title","timeLabel","Controll","onStartStop","onReset","App","operator","target","textContent","state","setState","stopBeep","audioBeep","current","pause","currentTime","timerInterval","clearInterval","setInterval","decreaseTimer","labelControl","play","React","createRef","this","preload","src","alarm","ref","href","rel","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b2b101f2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alarm.1387bde8.mp3\";","import React from 'react';\nimport './Presets.css';\n\nconst Presets = (props) => {\n  const buttonClass = props.started ? 'disable' : '';\n  const labels = ['break', 'session'];\n  return (\n    <div className=\"presets\">\n      {labels.map((label) => (\n        <div\n          key={label}\n          className=\"presets-section\">\n          <label\n            id={`${label}-label`}>\n            {`${label} Length`}\n          </label>\n          <div>\n            <button\n              className={buttonClass}\n              id={`${label}-decrement`}\n              onClick={(e) => props.onPresets(e, label)}>\n              -\n            </button>\n            <span\n              id={`${label}-length`}>\n              {(label === 'break') ? props.breakLength : props.sessionLength}\n            </span>\n            <button\n              className={buttonClass}\n              id={`${label}-increment`}\n              onClick={(e) => props.onPresets(e, label)}>\n              +\n            </button>\n          </div>\n        </div>\n      ))\n      }\n    </div>\n  )\n}\n\nexport default Presets;","import React, { useEffect } from 'react';\nimport './Time.css';\n\nconst formatTime = (timeLeft) => {\n  let minute = Math.floor(timeLeft / 60);\n  let second = timeLeft - (60 * minute);\n  if (minute < 10) (minute = '0' + minute)\n  if (second < 10) (second = '0' + second)\n\n  return `${minute}:${second}`\n}\n\nconst Time = (props) => {\n  // Similar to componentDidMount():\n  useEffect(() => {\n    document.title = `${props.timeLabel} ${formatTime(props.timeLeft)} - Pomodoro Clock`;\n  });\n\n  return (<div className=\"time\">\n    <div className=\"time-content\">\n      <label id=\"timer-label\">{`\"${props.timeLabel}\"`}</label>\n      <span id=\"time-left\">{formatTime(props.timeLeft)}</span>\n    </div>\n  </div>\n  );\n}\n\nexport default Time;","import React from 'react';\nimport './Controll.css';\n\nconst Controll = (props) => (\n  <div className=\"controll\">\n    <button\n      id=\"start_stop\"\n      onClick={props.onStartStop}>\n      {props.started ? 'Stop' : 'Start'}\n    </button>\n    <button id=\"reset\" onClick={props.onReset}>Reset</button>\n  </div>\n)\n\nexport default Controll;","import React from 'react';\nimport Presets from './components/Presets';\nimport Time from './components/Time';\nimport Controll from './components/Controll';\nimport './App.css';\nimport alarm from './media/alarm.mp3';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      breakLength: 5,\n      sessionLength: 25,\n      timeLabel: 'Session',\n      timeLeft: 25 * 60,\n      started: false,\n      timerInterval: null\n    }\n    this.audioBeep = React.createRef();\n  }\n\n  onPresets = (e, label) => {\n    const operator = e.target.textContent;\n    if (label === 'break' && this.state.breakLength > 1 && this.state.breakLength < 60 && !this.state.started) {\n      this.setState({\n        breakLength: (operator === '+') ? (this.state.breakLength + 1) : (this.state.breakLength - 1)\n      });\n    } else if (label === 'session' && this.state.sessionLength > 1 && this.state.sessionLength < 60 && !this.state.started) {\n      this.setState({\n        sessionLength: (operator === '+') ? (this.state.sessionLength + 1) : (this.state.sessionLength - 1),\n        timeLeft: (operator === '+') ? ((this.state.sessionLength + 1) * 60) : ((this.state.sessionLength - 1) * 60)\n      });\n    }\n  }\n\n  stopBeep = () => {\n    this.audioBeep.current.pause();\n    this.audioBeep.current.currentTime = 0;\n    this.state.timerInterval && clearInterval(this.state.timerInterval);\n  }\n\n  onReset = () => {\n    this.setState({\n      breakLength: 5,\n      sessionLength: 25,\n      timeLabel: 'Session',\n      timeLeft: 25 * 60,\n      started: false,\n      timerInterval: null\n    });\n    this.stopBeep();\n  }\n\n  //save the intervalID returned from setInterval() in 'timerInterval'\n  onStartStop = () => {\n    if (!this.state.started) {\n      this.setState({\n        started: !this.state.started,\n        timerInterval: setInterval(() => {\n          this.decreaseTimer();\n          this.labelControl();\n        }, 1000)\n      })\n    } else {\n      this.stopBeep();\n      this.setState({\n        started: !this.state.started,\n        timerInterval: null\n      });\n    }\n  }\n\n  decreaseTimer = () => {\n    this.setState({\n      timeLeft: this.state.timeLeft - 1\n    });\n  }\n\n  labelControl = () => {\n    if (this.state.timeLeft === 0) {\n      this.audioBeep.current.play();\n    } else if (this.state.timeLeft === -1) {\n      if (this.state.timeLabel === 'Session') {\n        this.setState({\n          timeLabel: 'Break',\n          timeLeft: this.state.breakLength * 60\n        });\n      } else {\n        this.setState({\n          timeLabel: 'Session',\n          timeLeft: this.state.sessionLength * 60\n        });\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"logo\">\n          <h1>Pomodoro Clock</h1>\n        </div>\n        <Presets\n          breakLength={this.state.breakLength}\n          sessionLength={this.state.sessionLength}\n          started={this.state.started}\n          onPresets={this.onPresets}\n        />\n        <Time\n          timeLabel={this.state.timeLabel}\n          timeLeft={this.state.timeLeft}\n          started={this.state.started}\n        />\n        <Controll\n          onReset={this.onReset}\n          onStartStop={this.onStartStop}\n          started={this.state.started}\n        />\n        <audio id=\"beep\" preload=\"auto\" src={alarm} ref={this.audioBeep}></audio>\n        <footer> by <a href=\"https://pythonsway.it\" target=\"_blank\" rel=\"noopener noreferrer\">Python's way</a></footer>\n      </div>\n    );\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}